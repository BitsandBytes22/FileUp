/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package filetools2;

import java.awt.List;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.stream.Stream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
//port java.io.filNals;


/**
 *
 * @author darshanadask
 */
public class MassRenamingWindow extends javax.swing.JFrame {
    
    String folderpath;
    int size;
    String[] pathArray;
    String[] rowName;
    String[] rowSize;
    String[] rowModifiedDate;
    String[] rowType;
    String[] coloumnNames={"Name","Modified Date","Type","Size"};
    
    Object [][] data;
    
    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");

    /**
     * Creates new form MassRenamingWindow
     */
    public MassRenamingWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new java.awt.TextField();
        textField1 = new java.awt.TextField();
        File1TextField = new javax.swing.JTextField();
        file1BrowseButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        folder1table = new javax.swing.JTable();
        UploadButton = new javax.swing.JButton();

        textField1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        textField1.setText("textField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textField1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        textField1.setText("textField1");

        File1TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                File1TextFieldActionPerformed(evt);
            }
        });

        file1BrowseButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        file1BrowseButton.setText("Browse");
        file1BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file1BrowseButtonActionPerformed(evt);
            }
        });

        folder1table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Last Modified Data", "Type", "Size"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(folder1table);

        UploadButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        UploadButton.setText("Upload");
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(File1TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UploadButton)
                    .addComponent(file1BrowseButton))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(File1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(file1BrowseButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UploadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 17, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void File1TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_File1TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_File1TextFieldActionPerformed

    private void file1BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file1BrowseButtonActionPerformed

        JFileChooser chooser = new JFileChooser();
        //  String choosertitle="hi";
        /*  chooser.showOpenDialog(null);
        Folder f1 = chooser.getSelectedFile();
        String filename1 = f1.getAbsolutePath();
        File1TextField.setText(filename1);*/
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("select folder");
        //  chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            //    System.out.println("getCurrentDirectory(): "
                //      +  chooser.getCurrentDirectory());
            //   System.out.println("getSelectedFile() : "
                //       +  chooser.getSelectedFile());
            folderpath = chooser.getSelectedFile().getAbsolutePath();
            File1TextField.setText(folderpath);

        }

        else {
            System.out.println("No Selection ");
        }

    }//GEN-LAST:event_file1BrowseButtonActionPerformed

    private void UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadButtonActionPerformed
        try{
            // Path path = Paths.get(folderpath1);
            File directory=new File(folderpath);
            size=directory.list().length;
            //  long size = Files.list(Paths.get(folderpath1)).count();
            /* for(int i=0;i<size;i++){
                String fileArray[i]=

            }*/
            // File folder1 = new File(folderpath1);
            File[] listOfFiles = directory.listFiles();
            int i=0;
            for (File file : listOfFiles) {

                if (file.isFile()) {
                    
                    data=new Object[size][4];
                    
                    rowName= new String[size];
                    rowModifiedDate=new String[size];
                    rowType=new String[size];
                    rowSize=new String[size];
                    
                    pathArray= new String[size];
                    //System.out.println(file.getName());

                    DefaultTableModel model = (DefaultTableModel)folder1table.getModel();
                    
                
                        data[i][0]=file.getName();
                        System.out.println("name:"+data[i][0]);
                        data[i][1]=sdf.format(file.lastModified());
                         System.out.println("data"+data[i][1]);
                        data[i][2]=Files.probeContentType(file.toPath());
                         System.out.println("type: "+data[i][2]);
                        data[i][3]=file.length();
                         System.out.println("size: "+data[i][3]);
                        
                    
                    
                    for(int j=0;j<size;j++){
                        pathArray[i]= file.getAbsolutePath() ;
                    }
                    
                
                    
               
                }
            i=i+1;
            
            
                
            }
            DefaultTableModel model =new DefaultTableModel(data,coloumnNames);
        
            
            
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"File Not Found");

        }

    }//GEN-LAST:event_UploadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MassRenamingWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MassRenamingWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MassRenamingWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MassRenamingWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MassRenamingWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField File1TextField;
    private javax.swing.JButton UploadButton;
    private javax.swing.JButton file1BrowseButton;
    private javax.swing.JTable folder1table;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
