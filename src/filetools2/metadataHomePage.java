/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package filetools2;

import java.awt.List;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.stream.Stream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import javax.swing.filechooser.FileFilter;
import filetools2.MASS_RENAMING_WINDOW;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.io.FileInputStream;

import org.apache.tika.exception.TikaException;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.parser.AutoDetectParser;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.apache.tika.sax.BodyContentHandler;


/**
 *
 * @author Sneha
 */
public class metadataHomePage extends javax.swing.JFrame {
    
    Path parentPath;
    Path childPath;
    public static File[] ChosenFiles;
    public static String folderPath;
    int size;
    String[] pathArray;
    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");


    /**
     * Creates new form metadataHomePage
     */
    public metadataHomePage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        folder1table = new javax.swing.JTable();
        txtPath = new javax.swing.JTextField();
        file1BrowseButton = new javax.swing.JButton();
        UploadButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        folder1table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Last Modified Data", "Type", "Size"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(folder1table);

        txtPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPathActionPerformed(evt);
            }
        });

        file1BrowseButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        file1BrowseButton.setText("Browse");
        file1BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file1BrowseButtonActionPerformed(evt);
            }
        });

        UploadButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        UploadButton.setText("Upload");
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(file1BrowseButton))
                    .addComponent(UploadButton)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPath)
                    .addComponent(file1BrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(UploadButton)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPathActionPerformed

    private void file1BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file1BrowseButtonActionPerformed

        JFileChooser chooser = new JFileChooser();
        //  String choosertitle="hi";
        /*  chooser.showOpenDialog(null);
        Folder f1 = chooser.getSelectedFile();
        String filename1 = f1.getAbsolutePath();
        File1TextField.setText(filename1);*/
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("select folder");
        //  chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        chooser.setMultiSelectionEnabled(true);
        chooser.showOpenDialog(null);
        ChosenFiles= chooser.getSelectedFiles();
        chooser.setAcceptAllFileFilterUsed(true);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            //    System.out.println("getCurrentDirectory(): "
                //      +  chooser.getCurrentDirectory());
            //   System.out.println("getSelectedFile() : "
                //       +  chooser.getSelectedFile());

            childPath=Paths.get(chooser.getSelectedFile().getAbsolutePath());
            parentPath=childPath.getParent();
            folderPath=String.valueOf(parentPath);
            txtPath.setText(folderPath);

        }

        chooser.addChoosableFileFilter(new FileFilter(){

            @Override
            public boolean accept(File file){

                return file.getName().toUpperCase().equals(".TXT") || file.getName().toUpperCase().equals(".DOC") || file.getName().toUpperCase().equals(".JPG");
            }

            @Override
            public String getDescription(){
                return ".txt files or .doc files or .jpg files";
            }
        });

        //
        // disable the "All files" option.
        //

        //

    }//GEN-LAST:event_file1BrowseButtonActionPerformed

    private void UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadButtonActionPerformed
        
        
        //no_files.setText(ChosenFiles.length+" Selected");

        //tPath.setText(folderpath);

        try{

            for (File file : ChosenFiles) {
                
                
                Parser parser = new AutoDetectParser();
                BodyContentHandler handler = new BodyContentHandler();
                Metadata metadata = new Metadata();
                FileInputStream inputstream = new FileInputStream(file);
                ParseContext context = new ParseContext();
                
                parser.parse(inputstream, handler, metadata, context);
                System.out.println(handler.toString());
                
                String[] metadataNames = metadata.names();
                
                for(String name : metadataNames) {		        
                    System.out.println(name + ": " + metadata.get(name));
                }
                
                metadata.set(Metadata.ARTIST, new Date());
                

                if (file.isFile()) {

                    System.out.println(file.getName());

                    String name=file.getName();
                    String modifiedDate=sdf.format(file.lastModified());
                    String type=Files.probeContentType(file.toPath());
                    String sizeKB=Long.toString(file.length());
                    String[] data={name,modifiedDate,type,sizeKB};

                    pathArray= new String[size];

                    DefaultTableModel model = (DefaultTableModel)folder1table.getModel();

                    for(int j=0;j<size;j++){
                        pathArray[j]= file.getAbsolutePath() ;
                    }

                    //adding a row which contains name,date,type,size of a file
                    model.addRow(data);

                }

            }

        }

        catch(Exception e){
            JOptionPane.showMessageDialog(null,"File Not Found");

        }
    }//GEN-LAST:event_UploadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(metadataHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(metadataHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(metadataHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(metadataHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new metadataHomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UploadButton;
    private javax.swing.JButton file1BrowseButton;
    private javax.swing.JTable folder1table;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables
}
